services:
  client:
    container_name: client
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    ports:
      - 5173:5173
    tty: true
    stdin_open: true
    networks:
      - app_network
    volumes:
      - ./apps/client:/app/apps/client
      - client-data:/app/apps/client/node_modules
  server:
    container_name: server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
      args:
        - NODE_ENV=${NODE_ENV:-development}
      target: ${NODE_ENV:-development}
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    tty: true
    stdin_open: true
    ports:
      - 3000:3000
    networks:
      - app_network
    volumes:
      - ./apps/server:/app/apps/server
      - server-data:/app/apps/server/node_modules
    depends_on:
      - db
  db:
    container_name: db
    image: postgres:14
    restart: unless-stopped
    env_file:
      - .env.local
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - TZ=Asia/Tokyo
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5432:5432"

networks:
  app_network:
    driver: bridge

volumes:
  client-data:
  server-data:
  db-data:
